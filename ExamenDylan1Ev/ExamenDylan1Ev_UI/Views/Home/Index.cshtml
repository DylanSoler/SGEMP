@model ExamenDylan1Ev_UI.Models.ViewModels.clsViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    @* Listado de personajes *@
    <br /><br />
    <h4>Personajes</h4>
    @using (Html.BeginForm())
    {
        @Html.DropDownListFor(x => Model.idPersonajeSeleccionado, new SelectList(Model.listadoPersonajes, "idPersonaje","nombre"))
        <br /><br />
        
        <input type="submit" value="Editar" name="seleccionPersonaje" />
        <br /><br />
        @ViewData["mensaje"]
        <br />
    }

    @if(Model.idPersonajeSeleccionado != 0)
    {
    //Formulario de edicion de personaje seleccionado

    @Html.BeginForm()
    {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Personaje seleccionado</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.idPersonaje, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.personajeSeleccionado.idPersonaje)
                    @Html.HiddenFor(model => model.personajeSeleccionado.idPersonaje, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.idPersonaje, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.alias, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.alias, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.alias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.vida, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.vida, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.vida, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.regeneracion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.regeneracion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.regeneracion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.danno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.danno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.danno, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.armadura, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.armadura, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.armadura, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.velAtaque, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.velAtaque, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.velAtaque, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.resistencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.resistencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.resistencia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.personajeSeleccionado.velMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.velMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.velMovimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden>
                @Html.LabelFor(model => model.personajeSeleccionado.idCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.personajeSeleccionado.idCategoria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.personajeSeleccionado.idCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <br /><br />
            @* Listado de categorias *@
           Categoria
           @Html.DropDownListFor(x => Model.personajeSeleccionado.idCategoria, new SelectList(Model.listadoCategorias, "idCategoria", "nombreCategoria"))
            <br /> <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" name="seleccionPersonaje" />
                </div>
            </div>
        </div>
    }
    }

</body>
</html>
